from turtle import *
from random import randint

#Tutaj definiuję funkcje rysujące prostokąt i koło, których będę używać przez resztę programu
def rctgl(x, y, clr):
    color(clr)
    pendown()
    fillcolor(clr)
    begin_fill()
    forward(y)
    rt(90)
    forward(x)
    rt(90)
    forward(y)
    rt(90)
    forward(x)
    rt(90)
    end_fill()
    penup()

def crcl(r, clr):
    rt(90)
    pendown()
    color(clr)
    fillcolor(clr)
    begin_fill()
    circle(r)
    end_fill()
    penup()
    lt(90)


#Funkcja na tworzenie mapy
def createmap():
    goto(-450, -480)
    rctgl(900, 960/3, "lawn green")
    fd(960/3)
    rctgl(900, 960*2/3, "sky blue")

#funkcja na rysowanie motyla, opcjonalne można wprowadzić x i y, które wyznaczą przedział rozmiarów motyli
def butterfly(x=20, y=80):
    size = randint(x, y)
    clr1 = (randint(0, 255), randint(0, 255), randint(0, 255))
    clr2 = (randint(0, 255), randint(0, 255), randint(0, 255))
    rctgl(size/10, size*6/7, "black")
    fd(size/14)
    lt(90)
    rctgl(size*(2/3)*(5/7), size*4.5/10, clr1)
    fd(size*4.5/40)
    rt(90)
    fd(size*(2/12)*(5/7))
    lt(90)
    rctgl(size*(2/6)*(5/7), size*4.5/20, clr2)
    rt(90)
    fd(size*(1/2)*(5/7))
    rt(90)
    fd(size*4.5/40)
    lt(180)
    rctgl(size*(2/6)*(5/7), size*4.5/20, clr2)
    rt(90)
    fd(size*(2/6)*(5/7) + size/14)
    rt(90)
    fd(size/20)
    lt(90)
    crcl(size/14, "black")
    rt(90)
    fd(size/20)
    rt(90)
    fd(size/14)
    lt(90)
    rctgl(size*(2/6)*(5/7), size*4.5/20, clr2)
    rt(90)
    fd(size*(2/6)*(5/7))
    lt(90)
    rctgl(size*(2/3)*(5/7), size*4.5/10, clr1)
    fd(size*4.5/40)
    rt(90)
    fd(size*(2/12)*(5/7))
    lt(90)
    rctgl(size*(2/6)*(5/7), size*4.5/20, clr2)
    lt(180)
    fd(size*4.5/40)
    lt(90)
    fd(size*(5/7)*(1/2) + size/14)
    rt(90)
    fd(size/10)
    rt(90)

#funkcja na rysowanie paproci, opcjonalnie można wprowadzić x i y, które wyznaczą przedział rozmiarów paproci
def fern(x=20, y=100):
    size = randint(x, y)
    color("green")
    fillcolor("green")
    pendown()
    begin_fill()
    lt(45)
    fd(size/2)
    rt(45)
    fd(size/9)
    rt(135)
    fd(size/2)
    lt(135)
    fd(size*2/9)
    lt(45)
    fd(size*2/5)
    rt(45)
    fd(size/9)
    rt(135)
    fd(size*2/5)
    lt(135)
    fd(size*2/9)
    lt(45)
    fd(size*3/10)
    rt(45)
    fd(size/9)
    rt(135)
    fd(size*3/10)
    lt(135)
    fd(size*2/9)
    rt(90)
    fd(size/9)
    rt(90)
    fd(size*2/9)
    lt(135)
    fd(size*3/10)
    rt(135)
    fd(size/9)
    rt(45)
    fd(size*3/10)
    lt(45)
    fd(size*2/9)
    lt(135)
    fd(size*2/5)
    rt(135)
    fd(size/9)
    rt(45)
    fd(size*2/5)
    lt(45)
    fd(size*2/9)
    lt(135)
    fd(size/2)
    rt(135)
    fd(size/9)
    rt(45)
    fd(size/2)
    rt(45)
    fd(size/9)
    rt(90)
    end_fill()
    penup()

#funkcja na rysowanie biedronki,  opcjonalnie można wprowadzić x i y, które wyznaczą przedział rozmiarów biedronek
def ladybug(x=10, y=40):
    size = randint(x, y)
    rctgl(size, size*3/2, "red")
    rt(90)
    fd(size/5)
    lt(90)
    fd(size/5)
    crcl(size/8, "black")
    rt(90)
    fd(size*0.75/5)
    lt(90)
    fd(size*2/5)
    crcl(size/8, "black")
    lt(90)
    fd(size*0.75/5)
    rt(90)
    fd(size*2/5)
    crcl(size/8, "black")
    rt(90)
    fd(size*1.5/5)
    lt(90)
    fd(size/5)
    crcl(size/8, "black")
    rt(180)
    fd(size*6/5)
    lt(90)
    fd(size*1.5/5)
    lt(90)
    fd(size/5)
    crcl(size/8, "black")
    lt(90)
    fd(size*0.75/5)
    rt(90)
    fd(size*2/5)
    crcl(size/8, "black")
    rt(90)
    fd(size*0.75/5)
    lt(90)
    fd(size*2/5)
    crcl(size/8, "black")
    lt(90)
    fd(size*4/5)
    rt(90)
    fd(size*1/2)
    rctgl(size, size/2, "black")
    fd(size/2)
    rt(90)
    fd(size/3)
    lt(135)
    pensize(size/18)
    pendown()
    fd(size/2)
    lt(180)
    fd(size/2)
    penup()
    lt(45)
    fd(size/3)
    lt(45)
    pendown()
    fd(size/2)
    lt(180)
    fd(size/2)
    penup()
    rt(45)
    fd(size*2/3)
    lt(90)
    fd(size*2)
    lt(180)

#funkcja wykonująca program, w niej opcjonalnie można wprowadzić: bf - liczba motyli, fn - liczba paproci, lb - liczba biedronek
def drawlandscape(bf=20, fn=20, lb=20):
    createmap()
    for i in range(fn):
        goto(randint(-450, 450), randint(-480, -160))
        fern()
    for i in range(lb):
        goto(randint(-450, 450), randint(-480, -160))
        rt(randint(0, 360))
        ladybug()
    for i in range(bf):
        goto(randint(-450, 450), randint(-161, 480))
        rt(randint(0, 360))
        butterfly()

tracer(0, 0)
colormode(255)
mode("logo")
penup()
drawlandscape()

Screen().exitonclick()